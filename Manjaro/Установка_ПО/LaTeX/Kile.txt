Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2023-02-18T01:12:59+02:00

====== Kile ======

< @manjaro @install @LaTeX @kile >

Kile — один из текстовых редакторов для LaTeX.

Это инструкция по установке Kile в Manjaro.

Продолжение установки [[LaTeX]]. 

Kile при установке тащит с собой пакет texlive как непременную зависимость, и это логично. Но это мешает. Установить пакет БЕЗ зависимостей arch не позволит, и это тоже логично. 

Но есть выход.

==== Установить Kile со всеми зависимостями ====

''sudo pacman -S kile''

Он затянет с собой большой (под гигабайт) texlive-core, но это нормально.

==== Удалить ненужные зависимости ====

''sudo pacman -Rdd texlive-core texlive-bin''

==== Добавить симлинки на теховские утилиты ====

Или одной командой

''sudo ln -s /home/LaTeX/bin/x86_64-linux/{tex,pdftex,latex,pdflatex,dvips,dvipdfmx,bibtex,makeindex,dvipng} /usr/bin/''

Или последовательно

''cd /usr/bin''
''sudo ln -s /home/LaTeX/bin/x86_64-linux/tex''
''sudo ln -s /home/LaTeX/bin/x86_64-linux/latex''
''sudo ln -s /home/LaTeX/bin/x86_64-linux/pdftex''
''sudo ln -s /home/LaTeX/bin/x86_64-linux/pdflatex''
''sudo ln -s /home/LaTeX/bin/x86_64-linux/makeindex''
''sudo ln -s /home/LaTeX/bin/x86_64-linux/dvips''
''sudo ln -s /home/LaTeX/bin/x86_64-linux/dvipng''
''sudo ln -s /home/LaTeX/bin/x86_64-linux/dvipdfmx''
''sudo ln -s /home/LaTeX/bin/x86_64-linux/bibtex''
''sudo ln -s /home/LaTeX/bin/x86_64-linux/xelatex''
'''
sudo ln -s /home/LaTeX/bin/x86_64-linux/biber
sudo ln -s /home/LaTeX/bin/x86_64-linux/kpsepath
sudo ln -s /home/LaTeX/bin/x86_64-linux/kpsewhich
sudo ln -s /home/LaTeX/bin/x86_64-linux/makeglossaries
sudo ln -s /home/LaTeX/bin/x86_64-linux/updmap
'''
''sudo ln -s /home/LaTeX/bin/x86_64-linux/xetex''

В ’/home/LaTeX/bin/x86_64-linux/’ 479 утилит и не все они нужны. Важно сделать симлинки на основные, от которых зависит  работа Kile и xelatex. 

В будущем, когда что-то «не захочет работать», можно будет добавить симлинк на соответствующую службу.

Kile
''> Настройка''
''> Проверка системы''
''> Далее''

Ждём, чтобы все проверки были зелёными.

===== Настроить Kile =====

Основные: 

	Сборка
	''> Live Preview = убрать''
	
	Сервис
	''> Добавлять отметку о порядке байтов (BOM)'' = убрать и впредь следить, чтобы не нажалось даже случайно
	
	Настройка
	''> Show document viewer'' = убрать

Прочие настройки по вкусу.

Самое главное — настроить build. 

	Компиляция проектов в Kile будет происходить через вызов внешнего скрипта из исполняемого sh-файла ’''/home/MyScripts/LaTeX/kile_buildPdfLaTeXWithMetafilesOutside.sh''’ по нажатию Alt+1 (дефолтный шорткат).

	Можно сделать разные sh-файлы — один для сборки с xelatex, другой для сборки с pdflatex. Их можно указать в разных сборках в Kile. И тогда проект в xelatex можно собирать по Alt+1, а проект pdflatex по Alt+2…

	Но удобнее настроить механизм сборки проекта в каждом проекте по-отдельности. 
	Проект 
	> Настроить проект
	> Свойства
	> Конфигурация QuickBuild
	> выбрать нужный движок

	Теперь сборка будет происходить по нажатию стандартного Alt+1 — не промахнёшься.

Можно или (1) указать одну команду, и на этом всё, или (2) попереключаться между несколькими инструментами внутри Kile. Второй вариант лучше.

==== ① Настройка компиляции через вызов консоли ====

Способ логичный, но есть моменты: 
1. при КАЖДОЙ компиляции будет открываться, быстро пролистываться и закрываться консольное окно.
2. в исполняемом файле есть команда для принудительного открытия файла в evince. При вызове в консоли команда работает. При вызове из Kile открытие evince или не происходит, или, вероятно, происходит, но после закрытия консоли evince, как полагается подчиненному процессу, тоже закрывается настолько быстро, что кажется, что он и не открывался.

Настройка
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
''> QuickBuild''
''> Конфигурация для инструмента QuickBuild = «Konsole XeLaTex+ViewPDF»''
''> Дополнительно''
	''Тип = Запускать в Konsole''
	''Класс = Compile''
''> Главное''
''> Команда = полный путь к исполняемому скрипту — /home/MyScripts/LaTeX/kile_buildPdfLaTeXWithMetafilesOutside.sh''
''> [OK]''

==== ② Настройка компиляции средствами Kile ====

=== Сбросить всё к исходным параметрам ===

Сперва всё очистим и сбросим к исходным параметрам.

Настройка
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
''> [Восстановить стандартные инструменты]''

=== Настроить инструмент XeLaTeX ===

Настройка
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
''> XeLaTeX''
''> Главное''
	''Команда = полный путь к исполняемому sh-файлу.''
''> Дополнительно''
	''Тип = Запускать вне Kile''
	''Класс = Compile''
	''Выходное расширение = pdf''

По-умолчанию в инструменте ’XeLaTeX’ класс = ’LaTeX’. 

	Но из-за моей схемы с компилированием через внешний файл Kile будет обязан выбрасывать сообщение об ошибке 

	''«Открыть файл журнала не удалось; вы запускали LaTeX?»''

	И да, с точки зрения Kile не запускал. А дальше Kile будет «зависать» в ожидании моего ответа на свой вопрос. И если я сделаю изменения в файлах и снова запущу компиляцию, он ничего не сделает, бо на предыдущий вопрос не было ответа — а там надо было нажать Esc.

	А если класс = Compile, то Kile выбросить сообщение об ошибке, и после этого сразу объявит о том, что выполнение [XeLaTeX] прервано. И дальше всё работает безупречно.

Всё остальное не трогать.

=== Настроить инструмент ViewPDF ===

Можно пропустить, ведь открытие pdf прописано в моем внешнем скрипте. 

К тому же, из-за моей схемы с компилированием через внешний файл Kile будет обязан выбрасывать сообщение об ошибке 

''«[ViewPDF] Файл /путь_к_нему/main.pdf не существует; вы скомпилировали исходный файл?»'' 

А этот файл и не должен существовать, мой скрипт его уже переименовал и скопировал в корень каталога проекта, и evince откроет его, ориентируясь по его новому имени. И если класс будет указан «LaTeX», то Kile будет «зависать» в ожидании моего ответа на свой вопрос. И если я сделаю изменения в файлах и снова запущу компиляцию, он ничего не сделает, бо на предыдущий вопрос не было ответа — там надо было нажать Esc.

Настройка
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
''> ViewPDF''
''> Конфигурация для инструмента ViewPDF''
	''Select = evince''
''> Дополнительно''
	''Тип = Use document viewer''
	''Класс = View''
	''Source Extention = pdf''
	''Выходное расширение = pdf''
	
Всё остальное не трогать.

=== Изменить последовательность действий в QuickBuild ===

Настройка
''> Настроить Kile''
''> Инструменты''
''> Сборка''
''> Список инструментов''
''> [Создать] = назвать «QuickBuild»''
''> Конфигурация для инструмента QuickBuild = «Default»''
''> Дополнительно''
	''Тип = Запустить последовательность команд''
	''Класс = Sequence''
''> Главное''
''> Инструмент = XeLaTex''
''> [Добавить] (в списке действий появится 'XeLaTeX')''
''[OK]''

Обычно в QuickBuild вместе с инструментом ’XeLaTex’ добавляют инструмент ’ViewPDF’. Его настройки такие:
	Проверять главный документ = галочка
	Переходить к первой ошибке = галочка
	Автоматически запускать дополнительные параметры = убрать галочу

Но в моём случае без этого инструмента можно обойтись.

==== Скомпилировать проект ====

Открыть проект в Kile. 

Открыть файл main.tex

Настройка
''> Сделать текущий документ «главным»''

Нажать Alt+1. 

Убедиться в том, что ошибок нет и документ компилируется.
