Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2023-11-07T15:57:20+02:00

====== pgAdmin ======

===== Установить postgres =====

Должен быть установлен [[Управление Manjaro:Управление пакетами:yay]]

В теории на этом шаге можно было установить сразу postgres и pgadmin, но что-то изменилось, и нативный клиент pgadmin установить невозможно. Его можно установить отдельно через python в виде веб-сервера.

''sudo yay postgresql''

В системе появится сервис ''postgres'' и новый юзер „postgres” (по-умолчанию без пароля, он будет задан позже).

==== Настроить сервис postgres ====

=== Задать каталог для сервиса postgres ===

(Непонятно почему, но…) Этот шаг рекомендуется выполнить в отдельном окне с консолью.

'''
sudo -u postgres -i
initdb --locale $LANG -E UTF8 -D '/var/lib/postgres/data/'
exit
exit
'''

Окно консоли будет закрыто. Открыть новое. 

=== Запустить сервис postgres ===

''sudo systemctl enable --now postgresql && sudo systemctl status postgresql''

Подразумевается, что отныне сервис postgres будет запускаться вместе с системой.

=== Задать пароль юзеру „postgres” ===

Пароль придумать, записать в блокнот, запомнить, блокнот прожевать и проглотить.

'''
psql -U postgres
postgres=# \password
'''

Указать пароль, подтвердить.

Выйти из shell:

''\q''

=== Настроить безопасность PostgreSQL Client Authentication ===

Опциональный шаг. 

Если речь идет про учебный проект или доступ к сервису будет только на localhost,  то дефолтные настройки норм, никто нигде не будет спрашивать пароль при подключении.

Если надо настроить несколько подключений к сервису Postgres извне и будет несколько пользователей, то настройка  „Method = trust” опасен, его надо поменять на „md5”.

Логин как root и перейти в каталог с настройками

'''
su
cd /var/lib/postgres/data
'''

Сделать копию файла с настройками (он называется „PostgreSQL Client Authentication Configuration File”) и отредактировать его

'''
cp pg_hba.conf pg_hba.conf.backup && mcedit pg_hba.conf
'''

По-умолчанию в файле pg_hba.conf будет это:

 ''TYPE  DATABASE        USER            ADDRESS                 METHOD''

''# "local" is for Unix domain socket connections only''
''local   all             all                                     trust''
''# IPv4 local connections:''
''host    all             all             127.0.0.1/32            trust''
''# IPv6 local connections:''
''host    all             all             ::1/128                 trust''
''# Allow replication connections from localhost, by a user with the''
''# replication privilege.''
''local   replication     all                                     trust''
''host    replication     all             127.0.0.1/32            trust''
''host    replication     all             ::1/128                 trust''

Поменять все инструкции „trust” на „md5”.

=== Настроить быстрое открытие определенной БД ===

В некоторых обстоятельствах удобно сразу открывать определенную БД, например „DB_NAME”:

''> psql DB_NAME postgres''

Управляющие команды

'''
postgres=# \c                       # see current database
postgres=# \l                       # see list of databases
postgres=# \c dbname                # set database
postgres=# create database dbname;  # create database
postgres=# \dt                      # see list of tables
'''

===== Установить pgAdmin =====

==== Проверить, что запущен postgres service ====

Он уже был запущен на предыдущих шагах, но можно и повторить

''sudo systemctl enable --now postgresql && sudo systemctl status postgresql''

==== Создать основные директории для pgadmin ====

''sudo mkdir /var/lib/pgadmin && sudo mkdir /var/log/pgadmin''

Назначить своего юзера владельцем этих директорий:

''sudo chown $USER /var/lib/pgadmin''
''sudo chown $USER /var/log/pgadmin''

==== Создать Python-based virtual environment ====

''python3 -m venv pgadmin4''

Подразумеваем, что каталог для этого окружения будет создан в профиле пользователя, которому это всё нужно. 

==== Установить pgAdmin4 ====

''pip install pgadmin4''

==== Запустить pgAdmin4 ====

Активировать окружение для запуска pgAdmin

''source ~/pgadmin4/bin/activate''

Будет запущен shell, зрительно это выглядит так: 

''(pgadmin4) user@hostname:~$''

В этом shell перейти в каталог с pgAdmin и запустить сервис pgadmin:

''cd ~/pgadmin4/ && pgadmin4''

Дождаться сообщения 

''Starting pgAdmin 4. Please navigate to'' [[http://127.0.0.1:5050|''http://127.0.0.1:5050'']] ''in your browser.''

Это окно с консолью закрывать нельзя — сервис схлопнется.

Разумно закатать эту последовательность команд для запуска сервиса в один исполняемый sh-файл и запускать страницу управления СУБД в Firefox (с рабочим профилем „profileNameWork”):

'''
#!/bin/bash
# запуск окружения для работы pgadmin в Manjaro
source ~/pgadmin4/bin/activate
	echo "Env activated"
cd ~/pgadmin4 & sleep 1 & pgadmin4 &
	echo "pgAdmin activated"
firefox -p profileNameWork --new-tab http://127.0.0.1:5050 &
	echo "Done!"
'''

===== Открыть СУДБ =====

Доступ только из браузера.

Открыть браузер 
> http://127.0.0.1:5050 
> залогиниться в pgAdmin
> подключиться к нужной БД

По-умолчанию доступна БД на локалхосте:

'''
Host: localhost
Port: 5432
Maintenance database: postgres
Username: postgres
Password: <your password>
'''

//Next step//: [[Linux:Software:pgAdmin]]
