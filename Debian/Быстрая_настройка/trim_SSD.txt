Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2022-02-24T02:44:14+02:00

====== trim SSD ======

< @sdd @hdd @trim >

Наверняка система установлена на быстром SSD. 

Весьма вероятно. что при создании партиции для установки системы были проставлены флаги ''discard, noatime, nodiratime.'' 

Лучше это всё перепроверить и делать самому с нуля, осмысленно.

===== Теория "trim" =====

https://hddiq.ru/tverdotelnye-nakopiteli-ssd/trim-ssd#_TRIM_Linux

Современные операционные системы, как и файловые системы, пока еще рассчитаны в основном на работу с HDD (жесткий механический диск или винчестер) и при создании нового файла операционная система записывает его в специальную таблицу на жестком диске (MFT — Master File Table — Главная файловая таблица) — координату данного файла. Этим самым файловая таблица сообщает системе четкое и точное месторасположение кластеров с записанной информацией. Когда файл удаляется с жесткого диска, система удаляет данные удаляемого файла из этой таблицы MFT, сам файл не трогая — именно в этом смысл сущности «Корзина». А при записи новых данных файлы просто пишутся поверх старых. 

А вот для перезаписи данных на SSD требуется удаление не только координаты из MFT таблицы, но стирания самого ненужного более файла из ячеек flash-памяти. Здесь и приходит на помощь функциональность Trim. Оно же Тримминг — технология, которая обеспечивает более равномерный износ SSD-диска и более быструю работу с данными. TRIM (англ. to trim — подрезать) – это команда протокола SATA, которая сообщает операционной системе, какие блоки ранее записанных данных на SSD уже не нужны из-за удалений файлов или форматирования. Это позволяет SSD выполнить «сборку мусора», иначе операции записи на SSD существенно бы замедлились.

При пользовании SSD дисками со временем возникает ситуация, когда производительность их значительно снижается. Когда вы только начали пользоваться диском и все блоки flash памяти новые и чистые, то и скорость записи на них довольно высокая, в соответствии с заявленной в документации. Когда же SSD диск будет полностью записан, а затем некоторые файлы будут удалены, перезапись станет происходить на них на гораздо более низких скоростях, ведь контроллеру вашего диска придется перед записью очищать и ранее использованные блоки flash памяти перед тем, как записать туда новые данные.

Для того, чтобы скорости работы SSD не падали, в новые операционные системы добавляется команда ATA TRIM. Специальный драйвер файловой системы при стирании файла направляет команду Trim для контроллера SSD диска. Когда контроллер SSD диска воспринимает команду, он сразу же очищает более не используемые блоки flash памяти. Делается это в режиме фона, в перерывах между любыми операциями записи и чтения.

Использование команды Trim позволяет вернуть нам полную скорость записей для вторично используемых блоков flash памяти. 

==== Как проверить, что trim поддерживается на моем ssd ====

* ''sudo aptitude install hdparm''

Если ssd на [[/dev/sda,]] то

* ''sudo hdparm -I /dev/sda | grep "TRIM supported"''

If there's no output, your drive doesn't support TRIM. Если поддерживается, то ждем ответ вроде //Data Set Management TRIM supported (limit 8 blocks).//

Также важно, чтобы дисковый контроллер работал в режиме «AHCI».  Нужно проверить в BIOS, что для контроллера SATA выставлен режим AHCI. 

	Под виндой это можно выяснить и в «Диспетчере устройств».

Так же функция Trim не будет работать если:
* Подключение SSD диска осуществляется через USB.
* Диск SSD размечен в файловой системе FAT32.

И важно понимать, что если использовать Trim, то о восстановлении удаленных данных можете забыть. Если удалить файл, то все его данные на SSD дисках будут полностью уничтожены.

The "discard" options **is not needed** if your SSD has enough overprovisioning (spare space) or you leave (unpartitioned) free space on the SSD.

	See http://www.spinics.net/lists/raid/msg40866.html 

===== Нужен ли trim (discard) на hdd =====

Нет.

На ssd физика хранения данных иная, нежели на hdd, поэтому надо указать опцию discard при установке системы для разделов, которые устанавливаются на ssd. 

	discard — опция монтировании файловой системы.

По-сути, к диску всё так же происходят обращения, и записываются новые файлы, разница только в том, как их помечают удалёнными — через trim (или discard) их никак не помечают, их просто удаляют. Ячейки освобождаются от заряда, они пустые. Делается это в режиме фона, в перерывах между любыми операциями записи и чтения.

На hdd discard не нужно. Даже если этот параметр будет явно указан, работать он не будет. 
	
	Если на картонке написать «танк» — танком картонка не станет.

На hdd можно (хоть и не всегда нужно) задействовать **noatime**.

Каждый раз при создании нового файла записывается много всякой служебной информации — она нужна и важна. И каждый раз при обращении к какому-нибудь файлу тоже записывается служебная информация. Монтирование файловой системы с noatime это приказ системе «Do not update inode access times on this filesystem». 

	//Add the "noatime" (or the default "relatime") mount option in /etc/fstab, to disable (or significantly reduce) disk writes whenever a file is read.// 
	
	//This improves filesystem read performance for both SSDs and HDDs.// 

Надо понимать, что через noatime снижается уровень журналирования, и при сбое восстановление системы может быть или затруднено, или невозможно. В этом смысле преимущества ext4 отменяются. Но в любом случае восстановление не всегда возможно, спасение только в бэкапах на внешние устройства.

===== Нужен ли discard для swap =====

Да, если swap установлен на ssd. Если на hdd, то можно не заморачиваться. Очевидно, что //не надо// ставить swap на ssd, если есть hdd.

Внимание, "noatime" (и его дочернее "nodiratime") для swap //не нужно//.

===== Нужен ли discard для зашифрованных разделов =====

Нет.

Официально заявлено, что The "discard" options with on-disk-cryptography (like dm-crypt) have drawbacks with security/cryptography. 

	This command can have a negative security impact because it can make filesystem-level operations visible on the physical device. For example, information leaking filesystem type, used space, etc. may be extractable from the physical device if the discarded blocks can be located later. If in doubt, do not use it.

===== Как проверить, включен ли TRIM =====

''lsblk --discard''

Вариант ответа:

'''
NAME   DISC-ALN DISC-GRAN DISC-MAX DISC-ZERO
sda           0      512B       2G         0
├─sda1        0      512B       2G         0
├─sda2        0      512B       2G         0
├─sda3        0      512B       2G         0
└─sda5        0      512B       2G         0
sdb           0        0B       0B         0
├─sdb1        0        0B       0B         0
├─sdb5        0        0B       0B         0
├─sdb6        0        0B       0B         0
└─sdb7        0        0B       0B         0
'''

Здесь
* sda мой ssd.
* sdb мой hdd.

Если видим 0 (нулевые значения) в колонках DISC-GRAN (discard granularity) и DISC-MAX (discard max bytes), значит TRIM на этих разделах не работает. Здесь DISC-GRAN повсюду равен 512B потому, что размер сектора на моём SSD равен 512 bytes.

Проверить, есть ли TRIM на корневом диске (/):

''sudo fstrim -v /''

Подождать ответ вроде 
///: 119,5 GiB (128270147584 bytes) trimmed//

Если его нет, значит, TRIM для корневого диска системы НЕ работает. 

Ещё можно напрямую посмотреть настройки через "cat [[/etc/fstab"]]

'''
# /etc/fstab: static file system information.
#
# Use 'blkid' to print the universally unique identifier for a
# device; this may be used with UUID= as a more robust way to name devices
# that works even if disks are added and removed. See fstab(5).
#
# <file system> <mount point>   <type>  <options>       <dump>  <pass>
# / was on /dev/sda5 during installation
UUID=5cdc213b-a7c0-41c4-a66c-69f265db52a5 /               ext4    discard,noatime,errors=remount-ro 0       1
# /home was on /dev/sdb7 during installation
UUID=3df3223a-1d70-4042-8f76-e575e0acda46 /home           ext4    discard,noatime 0       2
# /tmp was on /dev/sdb6 during installation
UUID=3c99498b-a9ad-4f7c-821b-203d9ed0f159 /tmp            ext4    discard,noatime,nodiratime 0       2
# swap was on /dev/sdb5 during installation
UUID=2ccc49fb-e364-4532-ab47-d3c9923f2cd1 none            swap    sw              0       0
/dev/sr0        /media/cdrom0   udf,iso9660 user,noauto     0       0
'''

В частности, / у меня на ssd, а [[/home,]] [[/tmp]] и [[/swap]] на hdd. Видно, что trim (через discard) включен и для корня, и для всех остальных разделов. Ранее через «''lsblk --discard''» уже было видно, что для разделов на hdd тримминг хоть и включён, но нифига не работает, бо он там нафиг не нужен.

===== Как включить trim в уже работающей системе =====

Надо указать параметр discard у разделов в [[/etc/fstab.]] Открыть этот файл на редактирование можно по-разному. Сперва надо убедиться в том, что в консоли не запущен MidnightCommander, бо он перехватит сочетание Ctrl+O.

	С содержимым этого файла действовать ОСТОРОЖНО!
	На всякий случай — он не редактируется напрямую, будет открыт новый файл в [[/tmp.]]

''sudo -e /etc/fstab''

Добавить слово "discard" к тем разделам, которые физически размещаются на диске SSD.

Например:

''UUID=69006d4f-bdd7-4fb8-a4ff-fe3adbcc5c73 /  ext4'' //**''discard''**//'',errors=remount-ro 0   1''

Теперь, после перезагрузки компьютера, помеченные разделы на SSD будут подмонтированы с параметром discard.

	Обычно он открывается в редакторе nano, поэтому сохранение и выход надо делать через последовательное нажатие
	1. Ctrl+O
	2. enter (подразумевается редактирование имени файла, что в нашем случае не нужно)
	3. Ctrl+X

Кроме этого, для раздела на SSD диске стоит добавить **noatime** (или realtime) — это опции уменьшения нагрузки по записи, после этой команды не будут обновляться даты доступа к папкам и файлам.

	Ещё есть **nodiratime** — это запрет на обновление даты доступа к папкам. Если включен noatime, то nodiratime указывать незачем, оно уже включено.
	
''noatime'' можно включить для /tmp, если он на отдельном разделе.

Еще можно добавлять опцию **commit** и указывать значения, допустим, в 60 секунд — операции записи будут отложены и станут выполняться на один раздел раз в 60 секунд. Но обратите внимание, что данную опцию стоит добавлять только в том случае, если ваш компьютер подключается через UPS (ИБП), или же вы производите действия на ноутбуке — в случае потери электроэнергии батарея ноутбука сработает как ИБП. Иначе очень высок риск при мелком сбое энергии потерять диск СРАЗУ.

Тем самым, строка fstab может иметь, к примеру, такой вид:

''UUID=aeade6fd-2b24-4e59-bc8c / ext4 noatime,discard,errors=remount-ro,''//**''commit=60''**// ''0 1''

===== Как определить trim под Windows =====

	* В меню поиска «Start/Пуск» наберите «cmd» для поиска утилиты командной строки Windows;
	* Нажмите на программу cmd правой клавишей мыши и выберите «Run as Administrator/Запуск от имени администратора»
	* В командной строке наберите «''fsutil behavior query DisableDeleteNotify''»
	* Если DisableDeleteNotify = 0, то функция TRIM активна. Если DisableDeleteNotify = 1, то функция TRIM выключена. При наборе команд не включайте кавычки.

Если команда TRIM выключена, то чтобы включить команду TRIM надо ввести команду 

''fsutil behavior set disabledeletenotify 0''
