Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2022-02-23T21:00:03+02:00

====== Как посмотреть все диски ======

TODO Про жесткие диски в консоли (часть 2). Переписать внятно. 

''ls /dev | grep sd''

Вывод будет содержать все диски
sda
sda1
sda2
sda3
sdb
sdb1
...

===== Создаем таблицу разделов GUID Partition Table (GPT) =====

Итак, нам нужно создать таблицу разделов. Выберите в GParted пункт меню Устройство->Создать таблицу разделов. В открывшемся окне выберите из списка пункт gpt и нажмите кнопку Применить.

Создание разделов и форматирование

Теперь нам нужно создать разделы на жестком диске. Для примера я создам два раздела, один объемом 2Тб, а второй ~800Гб (Gb). Выбираем пункт меню Раздел->Новый.

Откроется окно для создания нового раздела. В нем я прописал размер диска в мегабайтах — 2048000Мб, выбрал файловую систему EXT4 (обратите внимание, файловая система EXT4 не читается из под Windows) и задал диску метку BURGER (произвольное имя). В результате получилось следующее (нажмите кнопку Добавить):

Теперь создадим второй раздел, который займет все оставшееся свободное пространство. Опять выберите пункт меню Раздел->Новый. Окно создания второго раздела объемом ~800Гб и с меткой CAT у меня выглядит следующим образом (здесь снова нажимаете кнопку Добавить):

После выполнения описанных выше действий окно программы будет отображать то, как будет выглядеть диск после применения всех операций. Чтобы выполнить заданные операции выберите пункт меню Правка->Выполнить все операции или нажмите на кнопочку с изображением зеленой галочки.

Программа выдаст предупредительное сообщение. Еще раз подумайте все ли вы правильно указали и нажмите кнопку Применить.

Начнется процесс создания разделов и форматирование.

В конце вы должны получить сообщение о том, что все операции успешно выполнены.

В Ubuntu диски монтируются в директорию /media. Так как у наших дисков есть метки, они примонтируются в директории /media/BURGER и /media/CAT. Теперь нам нужно определить название устройства, используемого для созданных разделов (дисков). Для этого выполните в терминале команду:

df -l

В выводе команды вы сможете увидеть названия устройств, которые используются для наших дисков. У меня это /dev/sdb1:

Откройте диск в Nautilus, щелкните правой кнопкой мыши по свободному месту и в открывшемся меню нажмите Свойства (или нажмите Ctrl+Enter). Откроются свойства диска.
	

Как вы можете видеть на дисках уже занято 42 и 107Гб! Это связано с тем, что система резервирует 5% от общего объема диска для пользователя root. В частности, предполагается, что когда на диске не будет хватать места, тогда система воспользуется этими 5% и корректно выполнит все операции. Но это справедливо только для системных разделов, например, для корневого раздела файловой системы / или, например, для раздела /boot (если он у вас есть). А если вы используете диск только для хранения данных, тогда 5% места будут просто потеряны и не будут никогда использоваться. Можно просто отключить резервирование места, а можно уменьшить его количество. Чтобы уменьшить объем резервируемого пространства с 5% до 1%, выполните команду (число после ключа -m определяет количество процентов, используемых для резервирования):

sudo tune2fs -m 1 /dev/sdb1

Чтобы полностью отключить резервирование места:

sudo tune2fs -r 0 /dev/sdb1

Изменяем владельца диска

По умолчанию в Ubuntu диск у меня монтируется под группой root и пользователем root (суперпользователь является владельцем диска) и что-то записать или создать на нем под обычным пользователем нельзя. По хорошему нужно сделать запись в файле fstab для каждого диска, чтобы они автоматически монтировались в нужные директории, но об этом я расскажу в одной из следующих статей, а здесь дам ссылку. Сейчас мы просто изменим владельца диска (пользователя и группу), чтобы диски монтировались под вашим пользователем. Выполните в терминале команды (вместо yuriy укажите ваше имя пользователя):

sudo chown yuriy:yuriy /media/BURGER
sudo chown yuriy:yuriy /media/CAT

Теперь эти диски всегда будут монтироваться под пользователем yuriy.

https://www.howtoforge.com/linux_resizing_ext3_partitions

--------------------
@hdd @fstab 
