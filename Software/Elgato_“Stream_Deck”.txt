Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2022-04-06T02:09:32+03:00

====== Elgato “Stream Deck” ======

Внешние экранные клавиатурки “Stream Deck” от Elgato обычно представлены двумя моделями:
* стандартная “Stream Deck” на 15 кнопок, и этого должно хватать всем,
* продвинутая “Stream Deck XL” на 32 кнопки, бо самогордыня и воображение и вообще удобно.

Они идеальны для стримеров и для редактирования видео/аудио. На кнопки назначаются или клавиатурные шорткаты или ссылки на скрипты, можно добавить/редактировать иконки и названия кнопок. Затягивает.

		Кагбэ обзор: https://youtu.be/5nNGgcOGmtc

Под виндой это всё работает давно и стабильно, а под линуксами какое-то время было сложно, да и сегодня не блеск. Но работает. Основной источник https://timothycrosley.github.io/streamdeck-ui/

===== [психологическая] Подготовка к установке =====
Если к ноуту уже подключено такое устройство по USB и оно в принципе работает — его надо выдернуть.

Если в наличии несколько устройств, то надо определиться сразу с тем, которое будет подключено при установке ПО. 

		Под виндой их можно перевтыкивать без особых сложностей, внутренний софт определяет их и меня конфигурацию кнопок на лету. В Debian перевтык не сработает, и даже импорт настроек из сохранённого файла не поможет. Полагаю, что при установке происходит жёсткая призявка к железке.

		Один чёрт 32-ухкнопочная клавиатурка удобнее 15-тикнопочной.

На каждом шаге что-то может пойти не так. Если что-то пошло не туда — остановиться и гуглить. А пойти что-то не так вполне может, known issues (мне не помешали):

		* Some users have reported that the Stream Deck device does not work on all on specific USB ports, as it draws quite a bit of power and/or has strict bandwidth requirements. Try a different USB port. (Подтверждаю. Особенно эта штука не любит подключения через внешние usb-хабы, она предпочитает постоянный отдельный вход).
		* Streamdeck uses pynput for simulating Key Presses but it lacks proper support for **Wayland**. Generally your results will be good when using X (Ubuntu/Linux Mint).
		* Key Press or Write Text does not work on **Fedora** (outside of the streamdeck itself), which is not particularly useful. However, still do a lot with the Command feature.
		* On **Ubuntu** the Key Press ctrl+alt+t doesn't work. However using the Command gnome-terminal achieves the same result.
		* Version 1.0.2 lacks error handling when executing Command and Key Press actions. As a result, you have to be careful - an invalid command or key press makes everything else also stop working. The 1.0.3 release and above resolve this.
		* If you're using **GNOME** shell, you might need to manually install an extension that adds [[https://extensions.gnome.org/extension/615/appindicator-support/|KStatusNotifierItem/AppIndicator]] Support to make the tray icon show up.

По сравнению с приложением под виндой, приложение под линукс примитивнее:

		* Нет предустановленных кнопок. 
		* Невозможно перетаскивать кнопки на другие уровни. 
		* Невозможно настроить две иконки на одну кнопку (например, для кнопки включения/отключения звука можно подложить иконки разного цвета под оба состояния), поэтому сразу фидбэк от нажатия кнопки отсутствует — надо подождать и смотреть на экране, если что-то получилось. 
		* Не будет таймера на кнопке. 
		* Нет (да и не особо нужно, debian же, но всё же) возможности под одну кнопку подстроить выполнение нескольких команд последовательно. 

Поначалу это ощущается как недостаток, но чуть позже всё становится проще. Одна кнопка, одно действие.

==== Питание железки ====
**Есть проблема**: эти клавиатурки постоянно получают энергию из usb-дырок, даже если ноут отключён (батарея и сеть работают). В темноте клавиатурки Elgato очень ярко светятся, и если это дело оставить как есть, то когда-нибудь или пиксели на кнопках начнут выгорать к едреням, или нервные окончания.

**Как решать**: напрямую никак, только выдирать провод из usb после каждого выключения ноутбука, что расстраивает, бо ~~дырка~~ контакты usb разбалтываются. 

У некоторых компьютеров в BIOS-Advanced есть опция Deep Sleep, её можно переключить в Enabled, и после выключения к usb ток не подаётся. В моём ноуте такой опции нет.

**Решение**: несмотря на то, что клавиатуры Elgato не любят подключение через usb-хабы, их будет очень норм подключать через  usb-хаб с отдельными кнопками отключения на каждом порту — есть четырехпортовые и семипортовые, дешёвые и дорогие, их надёжность и долгосрочность работы обсуждаемая, но не суть. 

Секрет в том, что такие штучки не пригодны для питания подключаемых устройств (телефон на этом не зарядишь), они только передают данные. После выключения ноутбука всё полностью гаснет и включается только вместе с ноутбуком.

===== Установка окружения =====
Проверить, что железка отключена.

Убедиться в том, что в системе установлен [[Python]] и его PIP. 

''sudo apt install -y python3-pip python3-setuptools''

''sudo apt install -y libudev-dev libusb-1.0-0-dev libhidapi-libusb0 libxcb-xinerama0 libjpeg-dev zlib1g-dev libopenjp2-7 libtiff5 wmctrl''

''pip3 install wheel pillow''

Скачивается немного, но процесс может быть медленным.

==== Создать файл с правилами ====

''sudoedit /etc/udev/rules.d/70-streamdeck.rules''

	Если экзотичное sudoedit не сработает, открыть через nano или mcedit:
	''sudo nano /etc/udev/rules.d/70-streamdeck.rules''

Вставить в ''70-streamdeck.rules'' эти строки:

	'''
	SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="0060", GROUP="users", TAG+="uaccess"
	SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="0063", GROUP="users", TAG+="uaccess"
	SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="006c", GROUP="users", TAG+="uaccess"
	SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="006d", GROUP="users", TAG+="uaccess"
	'''

Проверить, что всё записалось:

''cat /etc/udev/rules.d/70-streamdeck.rules''

==== Перезагрузка udevadm ====

''sudo udevadm control --reload-rules''

==== Подключить Stream Deck к ноуту (провод USB). ====
Все кнопки-иконки должны засветиться и показать один большой логотип Elgato.

==== Установить streamdeck_ui ====

''pip3 install --user streamdeck_ui''

Добавить $HOME/.local/bin в PATH:

''PATH=$PATH:$HOME/.local/bin''

	или заглянуть в .bashrc — там это уже может быть записано.

Команду streamdeck или сунуть в автозапуск (в ''/~/.local/bin/streamdeck''), софт маленький и даже если железка не будет подключена, на системе это не скажется.

Запустить приложение

''streamdeck &''

Откроется это.

{{./StreamDeckUI_initial.jpg}}

Позже, после настройки, будет открываться это.

{{./StreamDeckUI_done.jpg}}

===== Нюансы приложения =====
В окне приложения можно разобраться быстро, если привык к софту Elgato под виндой, но есть нюансы, которые лучше проговорить.

Техническое имя подключённой клавиатуры отображается в якобы выпадающем меню. Если подключено только одно устройство, то и выпадать там нечему.

Справа от этого выпадающего списка с именем есть незаметная кнопка: там настраивается уровень свечения кнопок и таймер их погашения. Тайминги чуть странные:
		* Never
		* 10 секунд
		* 1 минута
		* 5 минут
		* …
		* «10 часов»…

Выглядит странно, но всё настраивается в json-конфиг-файле вручную: в самом низу параметр ''"display_timeout"'':
* 120 (секунд) = 2 минуты
* 150 (секунд) = 2,5 минут
* 180 (секунд) = 3 минуты
* 300 (секунд) = 5 минут

==== Настройка кнопок ====
Уровней вложенности экранов здесь 10, они называются «Page 1, Page 2» и тд. 

Каждая кнопка на каждом экране настраивается по-отдельности. Их можно захватывать курсором и перемещать, но невозможно переместить на другие экраны.

**Image**: png, jpg, bmp. Добавить, удалить.

	Размер файла не ограничен, огромное полотно софтина тупо втиснет в размер кнопки и по-дурацкий подрежет. Лучше делать иконки сразу квадратными, 256х256 или 128х128. Можно и меньше — для стандартной модели Stream Deck (на 15 кнопок — 3x5) изначально рекомендуется сделать иконки размером 72х72 пикселей, и таки да, смотрится здорово. Для проверки я сделал иконку 64х64, и если она стоит рядом с её аналогом на 72х72, то разница будет заметна, но только если о ней знать. Если проверочного аналога рядом не будет, то глаз не раздражает.

	Для крупной модели Stream Deck XL (на 32 кнопки — 4x8) рекомендую иконки размером 88х88 пикселей, потому что 72х72 на ней воспринимаются как уменьшённые. Всё, что крупнее, будет налезать на края кнопок, а всё, что меньше, будет выглядеть раздражающе миниатюрно. При этом в милимметрах размеры кнопок у обеих моделей идентичны, и казалось бы...

	Есть и плюсы в том, чтобы поставить на 32-хкнопочную иконки 72х72 — это как раз тот размер, до которого иконка будет ужата, если на кнопку добавить текст... А если иконка однозначно распознаваема, то текст на кнопке не обязателен, бо текст поджимает иконку снизу, уменьшая её на процентов 15.

	Системные иконки можно найти в /usr/share/icons/, есть смысл скопировать их куда-нибудь на постоянное место жительства специально для stream deck.

	Что делать, если благородный дон уже отресайзил ВСЕ иконки на уровень 72, а после переключения на крупняк понял, что нужно 88? Да пофигу, идём в тот же Gwenview и ресайзим каждую иконку на 88х88. После её установки в Stream Deck разница не будет заметна.

			Можно это дело и автоматизировать, мы же в линуксе (но не факт, что будет всё без шероховатостей):
		''sudo apt-get install imagemagick''
		
			Включить мозг, препарировать копии, а не оригиналы. Ресайз одной картинки:
		''convert *.png -resize 88x88 *.png''
		
			Ресайз всех png-картинок в папке:
		''for file in *.png; do convert $file -resize 88x88 $file; done''
		
			Если хочется получить переделанные файлы отдельно, то можно подтюнить переименование:
		''for file in *.png; do convert $file -resize 88x88 resized-$file; done''

**Text**: надпись на кнопке. Не больше семи символов, чтобы помещалось.

	В винде её можно ещё назначить цвет, размер и положение на кнопке, тут — цвет и шрифт не настраиваются. Можно только нажатием на кнопку рядом с полем Label передвигать надпись с нижнего края кнопки к верхнему.

	Еще заметно, что на Stream Deck XL в линуксах этих ваших буквы воспринимаются как мелкие, читаемость хуже, даже если сделать ТЕКСТ капсом.

**Command**: команды из консоли, любые, как односложные, так и составные в одну строку. От управления звуком до…

**Press Keys**: названия клавиш вписывать прописными с некоторыми исключениями, вроде «alt+F4». 

	В приложениях это работает ок, с глобальными хоткеями — нет. Но это же линукс, если что-то можно сделать из консоли, то всё гуд, просто всякие глобальные хоткеи надо вызывать через xdotool — this tool lets you simulate keyboard input and mouse activity, move and resize windows, etc. It does this using X11’s XTEST extension and other Xlib functions.

	Пример команды: /usr/bin/xdotool key --delay 60 ctrl+shift+F1. Надо поэкспериментировать и [[https://pynput.readthedocs.io/en/latest/_modules/pynput/keyboard/_base.html#Key|разобраться позже]] с возможными сочетаниями клавиш.

	Вписывать адреса сайтов как шорткаты напрямую нельзя, мы же в линуксе, надо так: 
	''firefox ''[[https://www.youtube.com/watch?v=bBNHD0bQymE|''https://www.youtube.com/watch?v=bBNHD0bQymE'']]

**Switch Page**: переключение между страницами/экранами устройства. По-умолчанию 0, ничего не происходит.

	Если указать цифру от 1 до 10 (количество определяется автоматически, по количеству кнопок на устройстве), то при нажатии на эту кнопку на клавиатуре Elgato произойдёт переход на соответствующую страницу.

**Brightness +/-**: рекомендую игнорировать. 

	Если указать здесь какое-то минусовое значение, то при нажатии на кнопку вся подсветка на устройстве гаснет (будет момент паники). Если указать какое-то плюсовое, то свечение клавиатурки усиливается соответственно. Мин/макс = 99. 

**Write text**: поле для необязательного комментария.

Кнопки для сохранения изменений нет, всё применяется сразу же после перемещения фокуса из поля ввода.

==== Как запускать консольные скрипты ====
Предположим, что я закатал многошаговый скрипт для запуска [[ftp]] в исполнямый sh-файл.

А ещё у меня есть разные профили для запуска konsole.

Используется общий принцип запуска чего угодно в Linux:

''konsole --profile $profileName -e ~/scripts/q_ftp_start.sh''

При запуске всего, что работает в консоли надо учесть, что 
* консольное окно откроется, 
* скрипт выполнится, 
* окно закроется.

Если выполнение происходит быстро, окно просто «мелькнёт». Если нужно посмотреть на результат, надо завершать работу скрипта по нажатию клавиши AnyKey.

==== Шорткаты из-под кнопок ====
Они применяются только на окна в фокусе, и в этом есть недостаток. Например, запущен OBS. Внутри него смена сцена происходит по нажатию Ctrl+Shift+F1. Если фокус на OBS — оно работает. Если нет — нет.

Решается через wmctrl — консольная утилита для взаимодействия с X Window Manager. Она была установлена на первых этапах, но если что:

''sudo aptitude install wmctrl''

Например, это взаимодействие с obs:

	Command: wmctrl -xa obs
	Press Keys: ctrl+shift+F1

«wmctrl -lx» выводит список всех открытых окон (-l) и название класса окна (-х), чтобы проще воспринимать их по названию программы-родителя.

		Покажи мне окно Krusader…
		''wmctrl -a krusader.krusader -x''
		
		Покажи мне окно Firefox…
		''wmctrl -a Navigator.Firefox -x''
		
		Покажи мне определённое окно из десятка открытых окон Firefox… Это уже сложнее, но можно назначить на кнопку просто урл, и есть же изучить [[https://habr.com/ru/post/483846/|альтернативный способ управления окнами в Linux]].

==== Импорт/экспорт настроек ====
Меню приложения очень простое: импорт и экспорт json-файла с настройками. Рекомендуется экспортировать в этот файл настройки после //каждого// изменения.

С импортом ранее сохранённых файлов может быть не всё гладко — надо всё забэкапить, открыть, разобраться с расположение элементов и аккуратно отредактировать. Linux же.

===== Обновление streamdeck_ui =====

''pip3 install --upgrade --user streamdeck_ui''

--------------------
@elgato @streamDeck @python @console 
