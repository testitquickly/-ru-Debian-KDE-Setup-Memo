Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2022-02-22T23:43:53+02:00

====== Как посмотреть содержимое всех системных переменных ======

''printenv'' выведет список всех системных переменных и их содержимого.

Если надо посмотреть что-то конкретное, например, содержимое переменной 'USER', тогда

''printenv USER''

	или

''echo $USER''

А можно грепнуть, тогда будет выведено и название переменной, и её содержимое:

''printenv | grep 'USER'''

===== Common Environmental and Shell Variables =====

Some environmental and shell variables are very useful and are referenced fairly often. Here are some common environmental variables that you will come across:

	* SHELL: This describes the shell that will be interpreting any commands you type in. In most cases, this will be bash by default, but other values can be set if you prefer other options.
	* TERM: This specifies the type of terminal to emulate when running the shell. Different hardware terminals can be emulated for different operating requirements. You usually won’t need to worry about this though.
	* USER: The current logged in user.
	* PWD: The current working directory.
	* OLDPWD: The previous working directory. This is kept by the shell in order to switch back to your previous directory by running cd -.
	* LS_COLORS: This defines color codes that are used to optionally add colored output to the ls command. This is used to distinguish different file types and provide more info to the user at a glance.
	* MAIL: The path to the current user’s mailbox.
	* PATH: A list of directories that the system will check when looking for commands. When a user types in a command, the system will check directories in this order for the executable.
	* LANG: The current language and localization settings, including character encoding.
	* HOME: The current user’s home directory.
	* _: The most recent previously executed command.

In addition to these environmental variables, some shell variables that you’ll often see are:

	* BASHOPTS: The list of options that were used when bash was executed. This can be useful for finding out if the shell environment will operate in the way you want it to.
	* BASH_VERSION: The version of bash being executed, in human-readable form.
	* BASH_VERSINFO: The version of bash, in machine-readable output.
	* COLUMNS: The number of columns wide that are being used to draw output on the screen.
	* DIRSTACK: The stack of directories that are available with the pushd and popd commands.
	* HISTFILESIZE: Number of lines of command history stored to a file.
	* HISTSIZE: Number of lines of command history allowed in memory.
	* HOSTNAME: The hostname of the computer at this time.
	* IFS: The internal field separator to separate input on the command line. By default, this is a space.
	* PS1: The primary command prompt definition. This is used to define what your prompt looks like when you start a shell session. The PS2 is used to declare secondary prompts for when a command spans multiple lines.
	* SHELLOPTS: Shell options that can be set with the set option.
	* UID: The UID of the current user.

==== Посмотреть содержимое ВСЕХ переменных в системе: ====

''set''

Осторожно, будет неебический список.

==== Как посмотреть содержимое определенной переменной (например, PATH): ====

''set | grep PATH''

или 

''echo $PATH''

==== Где вообще находятся переменные? ====

При логине система ищет их в следующих файлах в указанном порядке:
* /etc/profile
* ~/.bash_profile
* ~/.bash_login
* ~/.profile

===== Как добавить в системную переменную новые данные =====

Рекомендуется из-под своего юзера в своем домашнем каталоге сделать файл .bash_profile (простой текстовый), и вписать в него буквально построчно нужные данные. Для того, чтобы распространить изменения на всю систему, надо редактировать  файл [[/etc/profile]] — но это опасно.

Например, надо добавить в переменную PATH путь к файлам LaTeX /usr/local/texlive/2014/bin/i386-linux. Для этого в файл .bash_profile надо добавить одну строчку:

''PATH=/usr/local/texlive/2014/bin/i386-linux:$PATH''

Перелогиниться.

Содержимое этой переменной будет работать только для того юзера, в домашнем каталоге которого находится этот самый файл .bash_profile c этой самой строчкой.

===== Как удалить что-то из PATH =====

В консоли сперва сделать переменную с названием каталога, который надо удалить из PATH (это особенно важно, если в пути есть пробелы, их надо экранировать). 

Затем уже остальные команды.

'''
directory_to_remove=/home/astenix/Dev_Workspace/selenium/
PATH=:$PATH:
PATH=${PATH//:$directory_to_remove:/:}
PATH=${PATH#:}; PATH=${PATH%:}
echo $PATH
'''


--------------------
@console 
