Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2022-05-13T21:24:12+03:00

====== ssh ======

Secure shell (SSH) — наш основной способ коннекта на удалённый компьютер в консоли. 

В современных дистрибутивах этот сервис называется „OpenSSH”, и как правило, он установлен и не активен, поэтому всё начинается с [[#Проверить статус сервиса SSH|проверки его статуса]] и запуска при необходимости. Но начнём с установки, бо это основа.

===== Установить OpenSSH =====

**manjaro**
''sudo pacman -S openssh'' 

**debian**
''sudo apt-get install openssh''

==== Настроить сервис OpenSSH ====

Без явной необходимости править конфиг не рекомендуется категорически. 

Но если надо:

''sudo mcedit /etc/ssh/sshd_config''

===== Запустить сервис SSH =====

''sudo systemctl enable sshd.service && sudo systemctl start sshd.service && sudo systemctl status sshd.service''

Сервис самостоятельно пропишется в автозапуск.

===== Проверить статус сервиса SSH =====

''sudo systemctl status sshd.service''

По-умолчанию сервис OpenSSH должен быть отключён:

''sshd.service - OpenSSH Daemon''
''Loaded: loaded (/usr/lib/systemd/system/sshd.service; disabled; preset: disabled)''
''Active:'' __''inactive''__ ''(dead)''

Когда он включён:

''sshd.service - OpenSSH Daemon''
''Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; preset: disabled)''
''Active:'' __''active''__ ''(running) since Fri 2023-02-03 15:30:28 EET; 2h 37min ago''

==== Проверить подключение ====

=== Подключение к localhost ===

Простейший способ — зайти по ssh на localhost под своим же пользователем (условно «username») со своим же паролем:

''ssh username@localhost''

При первом подключении к серверу по ssh всегда происходит автообмен автосоздаваемыми ключами, которые система сгенерирует «сама для себя». Выглядит это так:

''The authenticity of host ’localhost (::1)’ can’t be established.''
''ECDSA key fingerprint is SHA256:kMUX_и так далее.''
''Are you sure you want to continue connecting (yes/no/[fingerprint])? ='' 

		На самом деле это не просто дежурный вопрос, а ещё и стандартная, условная, но всё-таки защита от ошибок при указании адреса подключения, поэтому относиться к ней следует серьёзно.

Набрать на клавиатуре «Yes», ввод. 

В ответ будет последнее предупреждение о том, что новый хост добавлен в список «знакомых ресурсов»:

''Warning: Permanently added ’192.168.1.20’ (ECDSA) to the list of known hosts.''

Произойдёт «вход на удалённый ресурс». Внешне в консоли может ничего не измениться.

Завершение подключения через ssh в консоли — командой „exit”.

=== Подключение к другому компьютеру ===

Этот шаг преждевременный, сперва ключи надо создать и зарегистрировать на удалённом компьютере. Но если это всё уже сделано, то здесь и далее подразумевается, что на удалённом компьютере с известным нам адресом есть известный нам логин (условно „''login“''), и нам известен его пароль.

''ssh login@192.168.1.20''

===== Добавление ssh-ключей в систему =====

По-умолчанию 
* каталог для всех ключей — „''~/.ssh”'' 
* файл с новым ssh-ключом называется „id_rsa”. 

Однако это не обязательно. Файлы с ssh-ключами можно называть как угодно и положить куда угодно, например, в „''/home/ssh_keys/nas/''”''.'' Важно только прописать их в системе — эта операция называется «импорт».

==== Создать новый ssh-ключ ====

Выполнить:

''ssh-keygen -t rsa -C ”ЕМАЙЛ”''

„rsa” — тип шифрования для нового ключа. Их несколько: 
* rsa
* dsa
* ecdsa
* ecdsa-sk
* ed25519
* ed25519-sk

Каждый подразумевает разные алгоритмы шифрования, и в некоторых случаях тот или иной формат может быть хорошим решением, а в некоторых большой проблемой, поэтому всегда по-умолчанию выбираем „rsa”.

Емайл при создании нового ключа обязателен. По нему в будущем можно будет идентифицировать ключ.

//Personal key// предлагается сохранить в файл „''∼/.ssh/id_rsa''”. Можно поменять место хранения и даже название этого файла.

//Public key// предлагается сохранить в файл „''∼/.ssh/id_rsa.pub''” Можно поменять место хранения и название файла.

//Passphrase// — пароль, кагбэ. Или оставить его пустым, или написать что-то, что не забудется, бо способов восстановления нет. Если что-то написать, то при подключении через этот ключ ВСЕГДА будет происходить запрос «пароля».

=== Проверить созданный ключ ===

Для простоты предположим, что новый ключ создан с настройками по-умолчанию в файлы „''id_rsa''“.

1. Вывести в консоль содержимое файла с публичным ключом:

''cat ∼/.ssh/id_rsa.pub''

Обычно это читаемый глазами текст, но бывают исключения.

2. Вывести в консоль содержимое файла с личным ключом:

''cat ∼/.ssh/id_rsa''

Содержимое этого файла — машинный код, для глаз нечитаемый (без исключений).

==== Импортировать новый ssh-ключ ====

Назовём это пропиской или регистрацией нового ключа в ssh-agent.

Подразумеваем, что ключ был создан с настройками по-умолчанию — в файл ''∼/.ssh/id_rsa''

1. Указать путь к personal key
 
''ssh-add ∼/.ssh/id_rsa''

2. Указать Passphrase ключа, если таковой был задействован.

Этот public key можно добавлять для аутентификации на другие ресурсы, например, в/на GitHub:
https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account

=== Проверить импорт ключа ===

Возможно, потребуется сперва перейти в режим работы с ssh в отдельном процессе:

''ssh-agent /bin/sh'' 

Запросить список зарегистрированных в системе ключей в кратком формате (его всегда достаточно):

'''
ssh-add -l
'''

Пример ответа: 
«''3072 SHA256:YyaZeTckxJHbwiuew98098yeikgjw7f/Sbdw+LJFejbfke user_email (RSA)»''

в расширенном формате

''ssh-add -L''

Если ssh-ключей в системе нет, ответ будет «//The agent has no identities//».

==== Импортировать «старый» ssh-ключ ====

В этом примере будет импортирован уже давно существующий ключ из файла с названием «nas_astenix» (без расширения), который находится в каталоге „''/home/ssh_keys/nas/''”

В том же каталоге находится и файл с публичным ключом «nas_astenix.pub», но импортируют всегда приватные ключи.

=== Установить права файла «только на чтение» ===

Иначе в импорте ключа будет отказано с причиной «//Permissions are too open//».

1. ''chmod 600 /home/ssh_keys/nas/nas_astenix''
2. ''ssh-add /home/ssh_keys/nas/nas_astenix''

Если всё хорошо, будет сообщение 

''Identity added: /home/astenix/ssh_keys/nas/nas_astenix (емайл_ключа)''

=== Вероятные проблемы ===

Если ответом будет “//Could not open a connection to your authentication agent//”, следует принудительно перейти в режим работы с ssh в отдельном процессе:

''ssh-agent /bin/sh'' 

Затем повторить импорт ключа:

''ssh-add /home/ssh_keys/nas/nas_astenix''

=== Проверить импорт ключа ===

Согласно [[#Проверить импорт ключа|инструкции]].

--------------------
@ssh 
